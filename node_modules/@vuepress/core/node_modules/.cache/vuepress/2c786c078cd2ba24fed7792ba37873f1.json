{"remainingRequest":"/Users/chenzhe/blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/chenzhe/blog/packages/theme-gungnir/utils/tag-cloud.js","dependencies":[{"path":"/Users/chenzhe/blog/packages/theme-gungnir/utils/tag-cloud.js","mtime":1630639090000},{"path":"/Users/chenzhe/blog/node_modules/cache-loader/dist/cjs.js","mtime":1632030570429},{"path":"/Users/chenzhe/blog/node_modules/babel-loader/lib/index.js","mtime":1623926664360}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvcnQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5kYXRlLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5wYXJzZS1pbnQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIgZnJvbSAiL1VzZXJzL2NoZW56aGUvYmxvZy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmV4cG9ydCBmdW5jdGlvbiB0YWdDbG91ZCh0YWdMaXN0KSB7CiAgdmFyIHRhZ09wdHMgPSB7CiAgICBjb2xvcjogewogICAgICBzdGFydDogIiNhNWE1ZTQiLAogICAgICBlbmQ6ICIjNDM4OGM0IgogICAgfQogIH07CiAgaWYgKHRhZ0xpc3QubGVuZ3RoID09IDApIHJldHVybiBbXTsKICB0YWdMaXN0LnNvcnQoZnVuY3Rpb24gKHByZXYsIG5leHQpIHsKICAgIHJldHVybiBuZXh0LnBhZ2VzLmxlbmd0aCAtIHByZXYucGFnZXMubGVuZ3RoOwogIH0pOwogIHZhciBsb3dlc3QgPSB0YWdMaXN0W3RhZ0xpc3QubGVuZ3RoIC0gMV0ucGFnZXMubGVuZ3RoOwogIHZhciBoaWdoZXN0ID0gdGFnTGlzdFswXS5wYWdlcy5sZW5ndGg7CiAgdmFyIHJhbmdlID0gTWF0aC5tYXgoaGlnaGVzdCAtIGxvd2VzdCwgMSk7CiAgdmFyIGNvbG9ySW5jciA9IGNvbG9ySW5jcmVtZW50KHRhZ09wdHMuY29sb3IsIHJhbmdlKTsKCiAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRhZ0xpc3QpLAogICAgICBfc3RlcDsKCiAgdHJ5IHsKICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgIHZhciBpdGVtID0gX3N0ZXAudmFsdWU7CiAgICAgIHZhciB3ZWlnaHRpbmcgPSBpdGVtLnBhZ2VzLmxlbmd0aCAtIGxvd2VzdDsKICAgICAgaXRlbS50YWdDb2xvciA9IHRhZ0NvbG9yKHRhZ09wdHMuY29sb3IsIGNvbG9ySW5jciwgd2VpZ2h0aW5nKTsKICAgIH0KICB9IGNhdGNoIChlcnIpIHsKICAgIF9pdGVyYXRvci5lKGVycik7CiAgfSBmaW5hbGx5IHsKICAgIF9pdGVyYXRvci5mKCk7CiAgfQoKICByZXR1cm4gdGFnTGlzdDsKfSAvLyBDb252ZXJ0cyBoZXggdG8gYW4gUkdCIGFycmF5Cgp2YXIgdG9SR0IgPSBmdW5jdGlvbiB0b1JHQihjb2RlKSB7CiAgaWYgKGNvZGUubGVuZ3RoID09IDQpIHsKICAgIGNvZGUgPSAvXHcrLy5leGVjKGNvZGUpOwoKICAgIGZvciAodmFyIGkgaW4gY29kZSkgewogICAgICBjb2RlW2ldID0gY29kZVtpXSArIGNvZGVbaV07CiAgICB9CgogICAgY29kZSA9IGNvZGUuam9pbigiIik7CiAgfQoKICB2YXIgaGV4ID0gLyhcd3syfSkoXHd7Mn0pKFx3ezJ9KS8uZXhlYyhjb2RlKTsKICByZXR1cm4gW3BhcnNlSW50KGhleFsxXSwgMTYpLCBwYXJzZUludChoZXhbMl0sIDE2KSwgcGFyc2VJbnQoaGV4WzNdLCAxNildOwp9OyAvLyBDb252ZXJ0cyBhbiBSR0IgYXJyYXkgdG8gaGV4CgoKdmFyIHRvSGV4ID0gZnVuY3Rpb24gdG9IZXgoYXJ5KSB7CiAgYXJ5ID0gYXJ5Lm1hcChmdW5jdGlvbiAodmFsdWUpIHsKICAgIHZhciBoZXggPSB2YWx1ZS50b1N0cmluZygxNik7CiAgICBoZXggPSBoZXgubGVuZ3RoID09IDEgPyAiMCIgKyBoZXggOiBoZXg7CiAgICByZXR1cm4gaGV4OwogIH0pOwogIHJldHVybiAiIyIgKyBhcnkuam9pbigiIik7Cn07Cgp2YXIgY29sb3JJbmNyZW1lbnQgPSBmdW5jdGlvbiBjb2xvckluY3JlbWVudChjb2xvciwgcmFuZ2UpIHsKICB2YXIgcmdiU3RhcnRDb2xvciA9IHRvUkdCKGNvbG9yLnN0YXJ0KTsKICByZXR1cm4gdG9SR0IoY29sb3IuZW5kKS5tYXAoZnVuY3Rpb24gKHZhbHVlLCBpKSB7CiAgICByZXR1cm4gKHZhbHVlIC0gcmdiU3RhcnRDb2xvcltpXSkgLyByYW5nZTsKICB9KTsKfTsKCnZhciB0YWdDb2xvciA9IGZ1bmN0aW9uIHRhZ0NvbG9yKGNvbG9yLCBpbmNyZW1lbnQsIHdlaWdodGluZykgewogIHZhciByZ2IgPSB0b1JHQihjb2xvci5zdGFydCkubWFwKGZ1bmN0aW9uICh2YWx1ZSwgaSkgewogICAgdmFyIHJlZiA9IE1hdGgucm91bmQodmFsdWUgKyBpbmNyZW1lbnRbaV0gKiB3ZWlnaHRpbmcpOwogICAgaWYgKHJlZiA+IDI1NSkgcmVmID0gMjU1O2Vsc2UgaWYgKHJlZiA8IDApIHJlZiA9IDA7CiAgICByZXR1cm4gcmVmOwogIH0pOwogIHJldHVybiB0b0hleChyZ2IpOwp9Ow=="},{"version":3,"sources":["/Users/chenzhe/blog/packages/theme-gungnir/utils/tag-cloud.js"],"names":["tagCloud","tagList","tagOpts","color","start","end","length","sort","prev","next","pages","lowest","highest","range","Math","max","colorIncr","colorIncrement","item","weighting","tagColor","toRGB","code","exec","i","join","hex","parseInt","toHex","ary","map","value","toString","rgbStartColor","increment","rgb","ref","round"],"mappings":"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","sourcesContent":["export function tagCloud(tagList) {\n  const tagOpts = {\n    color: { start: \"#a5a5e4\", end: \"#4388c4\" }\n  };\n\n  if (tagList.length == 0) return [];\n\n  tagList.sort((prev, next) => {\n    return next.pages.length - prev.pages.length;\n  });\n  const lowest = tagList[tagList.length - 1].pages.length;\n  const highest = tagList[0].pages.length;\n  const range = Math.max(highest - lowest, 1);\n\n  const colorIncr = colorIncrement(tagOpts.color, range);\n\n  for (let item of tagList) {\n    const weighting = item.pages.length - lowest;\n    item.tagColor = tagColor(tagOpts.color, colorIncr, weighting);\n  }\n  return tagList;\n}\n\n// Converts hex to an RGB array\nconst toRGB = (code) => {\n  if (code.length == 4) {\n    code = /\\w+/.exec(code);\n    for (let i in code) code[i] = code[i] + code[i];\n    code = code.join(\"\");\n  }\n  const hex = /(\\w{2})(\\w{2})(\\w{2})/.exec(code);\n  return [parseInt(hex[1], 16), parseInt(hex[2], 16), parseInt(hex[3], 16)];\n};\n\n// Converts an RGB array to hex\nconst toHex = (ary) => {\n  ary = ary.map((value) => {\n    let hex = value.toString(16);\n    hex = hex.length == 1 ? \"0\" + hex : hex;\n    return hex;\n  });\n  return \"#\" + ary.join(\"\");\n};\n\nconst colorIncrement = (color, range) => {\n  const rgbStartColor = toRGB(color.start);\n  return toRGB(color.end).map((value, i) => {\n    return (value - rgbStartColor[i]) / range;\n  });\n};\n\nconst tagColor = (color, increment, weighting) => {\n  const rgb = toRGB(color.start).map((value, i) => {\n    let ref = Math.round(value + increment[i] * weighting);\n    if (ref > 255) ref = 255;\n    else if (ref < 0) ref = 0;\n    return ref;\n  });\n  return toHex(rgb);\n};\n"]}]}