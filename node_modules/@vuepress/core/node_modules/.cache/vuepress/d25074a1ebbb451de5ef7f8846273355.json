{"remainingRequest":"/Users/chenzhe/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenzhe/blog/packages/theme-gungnir/components/PageEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenzhe/blog/packages/theme-gungnir/components/PageEdit.vue","mtime":1630639090000},{"path":"/Users/chenzhe/blog/node_modules/cache-loader/dist/cjs.js","mtime":1632030570429},{"path":"/Users/chenzhe/blog/node_modules/babel-loader/lib/index.js","mtime":1623926664360},{"path":"/Users/chenzhe/blog/node_modules/cache-loader/dist/cjs.js","mtime":1632030570429},{"path":"/Users/chenzhe/blog/node_modules/vue-loader/lib/index.js","mtime":1632030570748}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBpc05pbCBmcm9tICJsb2Rhc2gvaXNOaWwiOwppbXBvcnQgeyBlbmRpbmdTbGFzaFJFLCBvdXRib3VuZFJFIH0gZnJvbSAiQHRoZW1lL3V0aWxzL3V0aWxzIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUGFnZUVkaXQiLAoKICBjb21wdXRlZDogewogICAgbGFzdFVwZGF0ZWQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRwYWdlLmxhc3RVcGRhdGVkOwogICAgfSwKCiAgICBsYXN0VXBkYXRlZFRleHQoKSB7CiAgICAgIHJldHVybiB0aGlzLiR0aGVtZUxvY2FsZXMubGFzdFVwZGF0ZWQ7CiAgICB9LAoKICAgIGVkaXRMaW5rKCkgewogICAgICBjb25zdCBzaG93RWRpdExpbmsgPSBpc05pbCh0aGlzLiRwYWdlLmZyb250bWF0dGVyLmVkaXRMaW5rKQogICAgICAgID8gdGhpcy4kc2l0ZS50aGVtZUNvbmZpZy5lZGl0TGlua3MKICAgICAgICA6IHRoaXMuJHBhZ2UuZnJvbnRtYXR0ZXIuZWRpdExpbms7CgogICAgICBjb25zdCB7CiAgICAgICAgcmVwbywKICAgICAgICBkb2NzRGlyID0gIiIsCiAgICAgICAgZG9jc0JyYW5jaCA9ICJtYWluIiwKICAgICAgICBkb2NzUmVwbyA9IHJlcG8KICAgICAgfSA9IHRoaXMuJHNpdGUudGhlbWVDb25maWc7CgogICAgICBpZiAoc2hvd0VkaXRMaW5rICYmIGRvY3NSZXBvICYmIHRoaXMuJHBhZ2UucmVsYXRpdmVQYXRoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlRWRpdExpbmsoCiAgICAgICAgICByZXBvLAogICAgICAgICAgZG9jc1JlcG8sCiAgICAgICAgICBkb2NzRGlyLAogICAgICAgICAgZG9jc0JyYW5jaCwKICAgICAgICAgIHRoaXMuJHBhZ2UucmVsYXRpdmVQYXRoCiAgICAgICAgKTsKICAgICAgfQogICAgICByZXR1cm4gbnVsbDsKICAgIH0sCgogICAgZWRpdExpbmtUZXh0KCkgewogICAgICByZXR1cm4gdGhpcy4kdGhlbWVMb2NhbGVzLmVkaXRMaW5rVGV4dDsKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICBjcmVhdGVFZGl0TGluayhyZXBvLCBkb2NzUmVwbywgZG9jc0RpciwgZG9jc0JyYW5jaCwgcGF0aCkgewogICAgICBjb25zdCBiaXRidWNrZXQgPSAvYml0YnVja2V0Lm9yZy87CiAgICAgIGlmIChiaXRidWNrZXQudGVzdChkb2NzUmVwbykpIHsKICAgICAgICBjb25zdCBiYXNlID0gZG9jc1JlcG87CiAgICAgICAgcmV0dXJuICgKICAgICAgICAgIGJhc2UucmVwbGFjZShlbmRpbmdTbGFzaFJFLCAiIikgKwogICAgICAgICAgYC9zcmNgICsKICAgICAgICAgIGAvJHtkb2NzQnJhbmNofS9gICsKICAgICAgICAgIChkb2NzRGlyID8gZG9jc0Rpci5yZXBsYWNlKGVuZGluZ1NsYXNoUkUsICIiKSArICIvIiA6ICIiKSArCiAgICAgICAgICBwYXRoICsKICAgICAgICAgIGA/bW9kZT1lZGl0JnNwYT0wJmF0PSR7ZG9jc0JyYW5jaH0mZmlsZXZpZXdlcj1maWxlLXZpZXctZGVmYXVsdGAKICAgICAgICApOwogICAgICB9CgogICAgICBjb25zdCBnaXRsYWIgPSAvZ2l0bGFiLmNvbS87CiAgICAgIGlmIChnaXRsYWIudGVzdChkb2NzUmVwbykpIHsKICAgICAgICBjb25zdCBiYXNlID0gZG9jc1JlcG87CiAgICAgICAgcmV0dXJuICgKICAgICAgICAgIGJhc2UucmVwbGFjZShlbmRpbmdTbGFzaFJFLCAiIikgKwogICAgICAgICAgYC8tL2VkaXRgICsKICAgICAgICAgIGAvJHtkb2NzQnJhbmNofS9gICsKICAgICAgICAgIChkb2NzRGlyID8gZG9jc0Rpci5yZXBsYWNlKGVuZGluZ1NsYXNoUkUsICIiKSArICIvIiA6ICIiKSArCiAgICAgICAgICBwYXRoCiAgICAgICAgKTsKICAgICAgfQoKICAgICAgY29uc3QgYmFzZSA9IG91dGJvdW5kUkUudGVzdChkb2NzUmVwbykKICAgICAgICA/IGRvY3NSZXBvCiAgICAgICAgOiBgaHR0cHM6Ly9naXRodWIuY29tLyR7ZG9jc1JlcG99YDsKICAgICAgcmV0dXJuICgKICAgICAgICBiYXNlLnJlcGxhY2UoZW5kaW5nU2xhc2hSRSwgIiIpICsKICAgICAgICAiL2VkaXQiICsKICAgICAgICBgLyR7ZG9jc0JyYW5jaH0vYCArCiAgICAgICAgKGRvY3NEaXIgPyBkb2NzRGlyLnJlcGxhY2UoZW5kaW5nU2xhc2hSRSwgIiIpICsgIi8iIDogIiIpICsKICAgICAgICBwYXRoCiAgICAgICk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["PageEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PageEdit.vue","sourceRoot":"packages/theme-gungnir/components","sourcesContent":["<template>\n  <footer class=\"page-edit\">\n    <div v-if=\"editLink\" class=\"edit-link\">\n      <a :href=\"editLink\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <v-icon name=\"fa-pencil-alt\" />\n        {{ editLinkText }}\n      </a>\n    </div>\n\n    <div v-if=\"lastUpdated\" class=\"last-updated\">\n      <span class=\"prefix\">{{ lastUpdatedText }}:</span>\n      <span class=\"time\">{{ lastUpdated }}</span>\n    </div>\n  </footer>\n</template>\n\n<script>\nimport isNil from \"lodash/isNil\";\nimport { endingSlashRE, outboundRE } from \"@theme/utils/utils\";\n\nexport default {\n  name: \"PageEdit\",\n\n  computed: {\n    lastUpdated() {\n      return this.$page.lastUpdated;\n    },\n\n    lastUpdatedText() {\n      return this.$themeLocales.lastUpdated;\n    },\n\n    editLink() {\n      const showEditLink = isNil(this.$page.frontmatter.editLink)\n        ? this.$site.themeConfig.editLinks\n        : this.$page.frontmatter.editLink;\n\n      const {\n        repo,\n        docsDir = \"\",\n        docsBranch = \"main\",\n        docsRepo = repo\n      } = this.$site.themeConfig;\n\n      if (showEditLink && docsRepo && this.$page.relativePath) {\n        return this.createEditLink(\n          repo,\n          docsRepo,\n          docsDir,\n          docsBranch,\n          this.$page.relativePath\n        );\n      }\n      return null;\n    },\n\n    editLinkText() {\n      return this.$themeLocales.editLinkText;\n    }\n  },\n\n  methods: {\n    createEditLink(repo, docsRepo, docsDir, docsBranch, path) {\n      const bitbucket = /bitbucket.org/;\n      if (bitbucket.test(docsRepo)) {\n        const base = docsRepo;\n        return (\n          base.replace(endingSlashRE, \"\") +\n          `/src` +\n          `/${docsBranch}/` +\n          (docsDir ? docsDir.replace(endingSlashRE, \"\") + \"/\" : \"\") +\n          path +\n          `?mode=edit&spa=0&at=${docsBranch}&fileviewer=file-view-default`\n        );\n      }\n\n      const gitlab = /gitlab.com/;\n      if (gitlab.test(docsRepo)) {\n        const base = docsRepo;\n        return (\n          base.replace(endingSlashRE, \"\") +\n          `/-/edit` +\n          `/${docsBranch}/` +\n          (docsDir ? docsDir.replace(endingSlashRE, \"\") + \"/\" : \"\") +\n          path\n        );\n      }\n\n      const base = outboundRE.test(docsRepo)\n        ? docsRepo\n        : `https://github.com/${docsRepo}`;\n      return (\n        base.replace(endingSlashRE, \"\") +\n        \"/edit\" +\n        `/${docsBranch}/` +\n        (docsDir ? docsDir.replace(endingSlashRE, \"\") + \"/\" : \"\") +\n        path\n      );\n    }\n  }\n};\n</script>\n\n<style lang=\"stylus\">\n@require '../styles/wrapper.styl'\n\n.page-edit\n  @extend $wrapper\n  padding-top 1rem\n  padding-bottom 1rem\n  overflow auto\n\n  .edit-link\n    display inline-block\n    a\n      color var(--accent-color)\n      margin-right 0.25rem\n      &:hover\n        text-decoration underline\n  .last-updated\n    float right\n    font-size 0.9em\n    .prefix\n      font-weight 500\n      color var(--text-color)\n    .time\n      font-weight 400\n      color var(--text-color-sub)\n\n@media (max-width: $MQMobile)\n  .page-edit\n    .edit-link\n      margin-bottom 0.5rem\n    .last-updated\n      font-size 0.8em\n      float none\n      text-align left\n</style>\n"]}]}